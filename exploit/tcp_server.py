import socket
import time
import os

HOST = socket.gethostbyname(socket.gethostname())
PORT = 5151
SOCKET_LISTENER = None
COMM_CHANNEL = None
CLIENT_IP = None
SEP = b"|||"
FILE_NAME = None
FILE_SIZE = None
FILE_CONTENT = None

def reset_connection():
    global SOCKET_LISTENER, COMM_CHANNEL, CLIENT_IP, FILE_NAME, FILE_SIZE, FILE_CONTENT
    SOCKET_LISTENER = None
    COMM_CHANNEL = None
    CLIENT_IP = None
    FILE_NAME = None
    FILE_SIZE = None
    FILE_CONTENT = None
    time.sleep(5)

def is_connection_successful():
    try:
        global SOCKET_LISTENER, COMM_CHANNEL, CLIENT_IP
        SOCKET_LISTENER = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        SOCKET_LISTENER.bind((HOST, PORT))
        SOCKET_LISTENER.listen()
        COMM_CHANNEL, CLIENT_IP = SOCKET_LISTENER.accept()
        return True
    except Exception as e:
        print(e)
        return False  

def receive_file_attribute():
    global FILE_NAME, FILE_SIZE, FILE_CONTENT
    file_properties = COMM_CHANNEL.recv(1024) # 1024 bytes to receive
    FILE_NAME = str(file_properties.split(SEP)[0].decode()) # file name converted to str
    FILE_SIZE = int(file_properties.split(SEP)[1].decode()) # file size (bytes) converted to int
    FILE_CONTENT = file_properties.split(SEP)[2] # received and stored in byte format

def process_file_content():
    global FILE_CONTENT
    remaining_data = FILE_SIZE - len(FILE_CONTENT)
    overwrite_file()
    with open(FILE_NAME, "ab") as file:
        while remaining_data > 0:
            data = COMM_CHANNEL.recv(1024)
            FILE_CONTENT += data
            remaining_data -= 1024
        file.write(FILE_CONTENT)
    close_connection()

def overwrite_file():
    if os.path.exists(FILE_NAME):
        os.remove(FILE_NAME)

def close_connection():
    COMM_CHANNEL.close()
    SOCKET_LISTENER.close()
    time.sleep(5)

def conclusion():
    print("===="*10)
    print("Summary:")
    print(f"File Name: {FILE_NAME}")
    print(f"File Size: {FILE_SIZE} bytes")

if __name__ == "__main__":
    while True:
        reset_connection()
        print("****"*25)
        print(f"[Server-{HOST}] is waiting for connection ...")
        if is_connection_successful():
            print(f"** [SERVER-{HOST}] is connected to [CLIENT-{CLIENT_IP}] **")
            try:
                receive_file_attribute()
                process_file_content()
                print("** File Transfer Successful **")
                conclusion()
            except Exception as e:
                close_connection()
                print(e)
                print("** No file transacted! **")    
        else:    
            print("Connection Error!")